需要破解的是cookie,token,identifier
identifier = UUID.randomUUID().toString();

token = 时间戳(1574172697)然后getBytes()最后base64 结果是MTU3NDE3MjY5Nw==
 private static OkHttpClient okHttpClient;
    private String CER_HTTPS = "-----BEGIN CERTIFICATE-----\nMIIG0jCCBbqgAwIBAgIQG0m+0PkBBPPt8qhghGrnjjANBgkqhkiG9w0BAQsFADCB\nkDELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G\nA1UEBxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxNjA0BgNV\nBAMTLUNPTU9ETyBSU0EgRG9tYWluIFZhbGlkYXRpb24gU2VjdXJlIFNlcnZlciBD\nQTAeFw0xODAzMjYwMDAwMDBaFw0yMDAzMjUyMzU5NTlaMFsxITAfBgNVBAsTGERv\nbWFpbiBDb250cm9sIFZhbGlkYXRlZDEeMBwGA1UECxMVRXNzZW50aWFsU1NMIFdp\nbGRjYXJkMRYwFAYDVQQDDA0qLnRtdHBvc3QuY29tMIIBIjANBgkqhkiG9w0BAQEF\nAAOCAQ8AMIIBCgKCAQEAzzKYPwvyn5aCf/oIyNmDywwRPNhpXtFnJA/iqGW2ZUrf\njE1WFR6MtVjWxIbHFNMlYGlQeykV3dWRMrF3CkG5x3pc0l1wwxQJq2uEJiDwM7ea\nk7C/TIgmDEY+O/iCWHFFn13TYC77S4dVumEc7Pt++hFwGLkhyL9PL5wNoZB9KP+x\nvFrMZem8hWGgXGMASP9+32xve1hLxVJqvBLVqm5z6TTfZRvmvQv2Gnqgxf8lhKNd\nytS0ubyheTjOUhIUayQaUjTRlGhYJZ5QNx/aS29SaXR9pWXBADlCf8nWCoFwpaUn\nzwCXBiK1HyupWTCyYDEaCuQ0b90Y0yiEczNxmpp9fwIDAQABo4IDWjCCA1YwHwYD\nVR0jBBgwFoAUkK9qOpRaC9iQ6hJWc99DtDoo2ucwHQYDVR0OBBYEFP+C0f8fG8WZ\nnO19ITLRDdenxDF2MA4GA1UdDwEB/wQEAwIFoDAMBgNVHRMBAf8EAjAAMB0GA1Ud\nJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjBPBgNVHSAESDBGMDoGCysGAQQBsjEB\nAgIHMCswKQYIKwYBBQUHAgEWHWh0dHBzOi8vc2VjdXJlLmNvbW9kby5jb20vQ1BT\nMAgGBmeBDAECATBUBgNVHR8ETTBLMEmgR6BFhkNodHRwOi8vY3JsLmNvbW9kb2Nh\nLmNvbS9DT01PRE9SU0FEb21haW5WYWxpZGF0aW9uU2VjdXJlU2VydmVyQ0EuY3Js\nMIGFBggrBgEFBQcBAQR5MHcwTwYIKwYBBQUHMAKGQ2h0dHA6Ly9jcnQuY29tb2Rv\nY2EuY29tL0NPTU9ET1JTQURvbWFpblZhbGlkYXRpb25TZWN1cmVTZXJ2ZXJDQS5j\ncnQwJAYIKwYBBQUHMAGGGGh0dHA6Ly9vY3NwLmNvbW9kb2NhLmNvbTAlBgNVHREE\nHjAcgg0qLnRtdHBvc3QuY29tggt0bXRwb3N0LmNvbTCCAX8GCisGAQQB1nkCBAIE\nggFvBIIBawFpAHcA7ku9t3XOYLrhQmkfq+GeZqMPfl+wctiDAMR7iXqo/csAAAFi\nYGGflgAABAMASDBGAiEArnqkDzph6zc3UomF8Y+v9iBVuP0J4c87qylk1TKd5TEC\nIQChS9Anmsk4uzF3XYuK/+zyZOIpJL4RUOEjkgY8v8gxmAB2AG9Tdqwx8DEZ2JkA\npFEV/3cVHBHZAsEAKQaNsgiaN9kTAAABYmBhwmoAAAQDAEcwRQIgcwlRXeIolAs8\nlVe97laiAGYQ84tyLps2ENiLyIxtn9cCIQCenb3U4XwsSWPulPIhq/+NyCh948q2\nz+LeDXDWLnnfpwB2ALvZ37wfinG1k5Qjl6qSe0c4V5UKq1LoGpCWZDaOHtGFAAAB\nYmBhncAAAAQDAEcwRQIhALsoGrnysyoadNau/XIc3L2Fn9kEdi/CH+XWYknCgGvq\nAiBvKkzCc6GI2UiLIdnhMA+wjqMC9eDEe8Taap8Ask33TDANBgkqhkiG9w0BAQsF\nAAOCAQEAJtXsg6/kmtJZzfKmWpZ5SNRDBn+okJ6slM80q7fj6JkFiIaDsPmxQsGv\nw4eOBDtg2JFNtqtzNKk6ohMnKlE5ack4zE/NIJCt+QOcnVZYewLsIDYEOnlDoI/s\nO3/AltzxPKUPcQxnyDm8LG50Ttlzqr3b2RuOSlD+4jqhzt+GH/XIBv7piuo8T/Z2\ncqW9rM57lZ6Mgsi+ZkaEDIqfnX4InvKBiwhgvGRPuvfMAvJcyCuq/sVjxccj6CjG\nePcd0nMndt9n8aFwkNckEtbYbHM0s3UV5gdtkV0v1JYxfbBBjiE7gCZVobZQlO+g\nYrpxpkEP7xIKZosBJhHH2RgG5CNYhA==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIGCDCCA/CgAwIBAgIQKy5u6tl1NmwUim7bo3yMBzANBgkqhkiG9w0BAQwFADCB\nhTELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G\nA1UEBxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxKzApBgNV\nBAMTIkNPTU9ETyBSU0EgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMTQwMjEy\nMDAwMDAwWhcNMjkwMjExMjM1OTU5WjCBkDELMAkGA1UEBhMCR0IxGzAZBgNVBAgT\nEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBxMHU2FsZm9yZDEaMBgGA1UEChMR\nQ09NT0RPIENBIExpbWl0ZWQxNjA0BgNVBAMTLUNPTU9ETyBSU0EgRG9tYWluIFZh\nbGlkYXRpb24gU2VjdXJlIFNlcnZlciBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEP\nADCCAQoCggEBAI7CAhnhoFmk6zg1jSz9AdDTScBkxwtiBUUWOqigwAwCfx3M28Sh\nbXcDow+G+eMGnD4LgYqbSRutA776S9uMIO3Vzl5ljj4Nr0zCsLdFXlIvNN5IJGS0\nQa4Al/e+Z96e0HqnU4A7fK31llVvl0cKfIWLIpeNs4TgllfQcBhglo/uLQeTnaG6\nytHNe+nEKpooIZFNb5JPJaXyejXdJtxGpdCsWTWM/06RQ1A/WZMebFEh7lgUq/51\nUHg+TLAchhP6a5i84DuUHoVS3AOTJBhuyydRReZw3iVDpA3hSqXttn7IzW3uLh0n\nc13cRTCAquOyQQuvvUSH2rnlG51/ruWFgqUCAwEAAaOCAWUwggFhMB8GA1UdIwQY\nMBaAFLuvfgI9+qbxPISOre44mOzZMjLUMB0GA1UdDgQWBBSQr2o6lFoL2JDqElZz\n30O0Oija5zAOBgNVHQ8BAf8EBAMCAYYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNV\nHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwGwYDVR0gBBQwEjAGBgRVHSAAMAgG\nBmeBDAECATBMBgNVHR8ERTBDMEGgP6A9hjtodHRwOi8vY3JsLmNvbW9kb2NhLmNv\nbS9DT01PRE9SU0FDZXJ0aWZpY2F0aW9uQXV0aG9yaXR5LmNybDBxBggrBgEFBQcB\nAQRlMGMwOwYIKwYBBQUHMAKGL2h0dHA6Ly9jcnQuY29tb2RvY2EuY29tL0NPTU9E\nT1JTQUFkZFRydXN0Q0EuY3J0MCQGCCsGAQUFBzABhhhodHRwOi8vb2NzcC5jb21v\nZG9jYS5jb20wDQYJKoZIhvcNAQEMBQADggIBAE4rdk+SHGI2ibp3wScF9BzWRJ2p\nmj6q1WZmAT7qSeaiNbz69t2Vjpk1mA42GHWx3d1Qcnyu3HeIzg/3kCDKo2cuH1Z/\ne+FE6kKVxF0NAVBGFfKBiVlsit2M8RKhjTpCipj4SzR7JzsItG8kO3KdY3RYPBps\nP0/HEZrIqPW1N+8QRcZs2eBelSaz662jue5/DJpmNXMyYE7l3YphLG5SEXdoltMY\ndVEVABt0iN3hxzgEQyjpFv3ZBdRdRydg1vs4O2xyopT4Qhrf7W8GjEXCBgCq5Ojc\n2bXhc3js9iPc0d1sjhqPpepUfJa3w/5Vjo1JXvxku88+vZbrac2/4EjxYoIQ5QxG\nV/Iz2tDIY+3GH5QFlkoakdH368+PUq4NCNk+qKBR6cGHdNXJ93SrLlP7u3r7l+L4\nHyaPs9Kg4DdbKDsx5Q5XLVq4rXmsXiBmGqW5prU5wfWYQ//u+aen/e7KJD2AFsQX\nj4rBYKEMrltDR5FL1ZoXX/nUh8HCjLfn4g8wGTeGrODcQgPmlKidrv0PJFGUzpII\n0fxQ8ANAe4hZ7Q7drNJ3gjTcBpUC2JD5Leo31Rpg0Gcg19hCC0Wvgmje3WYkN5Ap\nlBlGGSW4gNfL1IYoakRwJiNiqZ+Gb7+6kHDSVneFeO/qJakXzlByjAA6quPbYzSf\n+AZxAeKCINT+b72x\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIFdDCCBFygAwIBAgIQJ2buVutJ846r13Ci/ITeIjANBgkqhkiG9w0BAQwFADBv\nMQswCQYDVQQGEwJTRTEUMBIGA1UEChMLQWRkVHJ1c3QgQUIxJjAkBgNVBAsTHUFk\nZFRydXN0IEV4dGVybmFsIFRUUCBOZXR3b3JrMSIwIAYDVQQDExlBZGRUcnVzdCBF\neHRlcm5hbCBDQSBSb290MB4XDTAwMDUzMDEwNDgzOFoXDTIwMDUzMDEwNDgzOFow\ngYUxCzAJBgNVBAYTAkdCMRswGQYDVQQIExJHcmVhdGVyIE1hbmNoZXN0ZXIxEDAO\nBgNVBAcTB1NhbGZvcmQxGjAYBgNVBAoTEUNPTU9ETyBDQSBMaW1pdGVkMSswKQYD\nVQQDEyJDT01PRE8gUlNBIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIICIjANBgkq\nhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAkehUktIKVrGsDSTdxc9EZ3SZKzejfSNw\nAHG8U9/E+ioSj0t/EFa9n3Byt2F/yUsPF6c947AEYe7/EZfH9IY+Cvo+XPmT5jR6\n2RRr55yzhaCCenavcZDX7P0N+pxs+t+wgvQUfvm+xKYvT3+Zf7X8Z0NyvQwA1onr\nayzT7Y+YHBSrfuXjbvzYqOSSJNpDa2K4Vf3qwbxstovzDo2a5JtsaZn4eEgwRdWt\n4Q08RWD8MpZRJ7xnw8outmvqRsfHIKCxH2XeSAi6pE6p8oNGN4Tr6MyBSENnTnIq\nm1y9TBsoilwie7SrmNnu4FGDwwlGTm0+mfqVF9p8M1dBPI1R7Qu2XK8sYxrfV8g/\nvOldxJuvRZnio1oktLqpVj3Pb6r/SVi+8Kj/9Lit6Tf7urj0Czr56ENCHonYhMsT\n8dm74YlguIwoVqwUHZwK53Hrzw7dPamWoUi9PPevtQ0iTMARgexWO/bTouJbt7IE\nIlKVgJNp6I5MZfGRAy1wdALqi2cVKWlSArvX31BqVUa/oKMoYX9w0MOiqiwhqkfO\nKJwGRXa/ghgntNWutMtQ5mv0TIZxMOmm3xaG4Nj/QN370EKIf6MzOi5cHkERgWPO\nGHFrK+ymircxXDpqR+DDeVnWIBqv8mqYqnK8V0rSS527EPywTEHl7R09XiidnMy/\ns1Hap0flhFMCAwEAAaOB9DCB8TAfBgNVHSMEGDAWgBStvZh6NLQm9/rEJlTvA73g\nJMtUGjAdBgNVHQ4EFgQUu69+Aj36pvE8hI6t7jiY7NkyMtQwDgYDVR0PAQH/BAQD\nAgGGMA8GA1UdEwEB/wQFMAMBAf8wEQYDVR0gBAowCDAGBgRVHSAAMEQGA1UdHwQ9\nMDswOaA3oDWGM2h0dHA6Ly9jcmwudXNlcnRydXN0LmNvbS9BZGRUcnVzdEV4dGVy\nbmFsQ0FSb290LmNybDA1BggrBgEFBQcBAQQpMCcwJQYIKwYBBQUHMAGGGWh0dHA6\nLy9vY3NwLnVzZXJ0cnVzdC5jb20wDQYJKoZIhvcNAQEMBQADggEBAGS/g/FfmoXQ\nzbihKVcN6Fr30ek+8nYEbvFScLsePP9NDXRqzIGCJdPDoCpdTPW6i6FtxFQJdcfj\nJw5dhHk3QBN39bSsHNA7qxcS1u80GH4r6XnTq1dFDK8o+tDb5VCViLvfhVdpfZLY\nUspzgb8c8+a4bmYRBbMelC1/kZWSWfFMzqORcUx8Rww7Cxn2obFshj5cqsQugsv5\nB5a6SE2Q8pTIqXOi6wZ7I53eovNNVZ96YUWYGGjHXkBrI/V5eu+MtWuLt29G9Hvx\nPUsE2JOAWVrgQSQdso8VYFhH2+9uRv0V9dlfmrPb2LjkQLPNlzmuhbsdjrzch5vR\npu/xO28QOG8=\n-----END CERTIFICATE-----\n\n";
    private final Builder clientBuilder = new Builder();
    private final Interceptor tokenInterceptor = new Interceptor() {
        public Response intercept(Chain chain) throws IOException {
            String appVersion = Utils.getAppVersionName();
            Request.Builder requestBuilder = chain.request().newBuilder().addHeader("Accept", "application/json").addHeader(b.h, "2015042402").addHeader("app_version", appVersion).addHeader(d.n, Constants.DEVICE).addHeader("identifier", Utils.getDeviceId()).addHeader("token", TimeUtil.getBase64TimeStamp());
            String stamp = String.valueOf(System.currentTimeMillis() + SharedPMananger.getInstance().getTimeDifference());
            String behindString = MD5.md5(Base64.encodeToString(("android" + appVersion + stamp).toLowerCase().getBytes(), 2)) + Utils.getRandomStampString();
            requestBuilder.addHeader("Cookie", "tmt_ticket=\"" + stamp.length() + ":" + stamp + "|" + behindString.length() + ":" + behindString + "\"");
            if (!"".equals(SharedPMananger.getInstance().getUserUniqueKey())) {
                requestBuilder.addHeader(SharedPMananger.USER_UNIQUE_KEY, SharedPMananger.getInstance().getUserUniqueKey());
            }
            if (!"".equals(SharedPMananger.getInstance().getAccessToken())) {
                requestBuilder.addHeader("access_token", SharedPMananger.getInstance().getAccessToken());
            }
            if ("".equals(SharedPMananger.getInstance().getUserGuid())) {
                requestBuilder.addHeader(MidEntity.TAG_IMEI, ApplicationUtil.getDeviceId());
            } else {
                requestBuilder.addHeader(MidEntity.TAG_IMEI, SharedPMananger.getInstance().getUserGuid());
            }
            requestBuilder.removeHeader("User-Agent").addHeader("User-Agent", "tmtAndroid" + Utils.getAppVersionName());
            return chain.proceed(requestBuilder.build());
        }
    };
     public static String getRandomStampString() {
        StringBuilder str = new StringBuilder();
        Random random = new Random();
        for (int i = 0; i < 12; i++) {
            if ("char".equals(random.nextInt(2) % 2 == 0 ? "char" : "num")) {
                str.append((char) (random.nextInt(26) + 97));
            } else {
                str.append(String.valueOf(random.nextInt(10)));
            }
        }
        return str.toString();
    }